name: Docker Image CI
env:
  armorcodehost: https://app.armorcode.com
  product: Docker Swarm
  subProduct: Visualizer
  environment: Production
  token: ${{secrets.ARMORCODE_TOKEN}}
  buildTool: GITHUB_ACTIONS
  buildNumber: ${{github.run_number}}
  end: 30
  SHA: ${{ github.event.pull_request.head.sha || github.event.after }}
  REGISTRY: docker.io
  IMAGE_NAME: sreejitharmorcode/docker-swarm-visualizer

on:
  push:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
     # - name: ArmorCode Validation
     #   run: |
     #     wget https://app.armorcode.com/static/scripts/slastatus.sh
     #     sh slastatus.sh
     
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Make the Armorcode upload script executable
        run: chmod +x .github/workflows/armorcode_import_docker_scout.sh
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.revision=${{ env.SHA }}            
          tags: |
            type=edge,branch=$repo.default_branch
            type=semver,pattern=v{{version}}
            type=sha,prefix=,suffix=,format=short 
            latest
            
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          sbom: true
          provenance: true
          push: ${{ github.event_name != 'pull_request' }}
          load: ${{ github.event_name == 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Analyze for critical and high CVEs
        id: docker-scout-cves
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ steps.meta.outputs.images }}
          sarif-file: sarif.output.json
          summary: true

      - name: Run the Bash script
        run: .github/workflows/armorcode_import_docker_scout.sh ${{ secrets.ARMORCODE_REPORT_TOKEN }} sarif.output.json
  
